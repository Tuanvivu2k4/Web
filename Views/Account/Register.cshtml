@model SaleOnline.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_AuthLayout.cshtml";
}

<div class="auth-box">
    <h4 class="text-center">Đăng ký</h4>
    @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "mt-4" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(m => m.Email, htmlAttributes: new { @class = "form-label text-start d-block" })
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Name, htmlAttributes: new { @class = "form-label text-start d-block" })
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.DateOfBirth, htmlAttributes: new { @class = "form-label text-start d-block" })
            @Html.TextBoxFor(m => m.DateOfBirth, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Password, htmlAttributes: new { @class = "form-label text-start d-block" })
            <div class="input-group mb-3">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", id = "password" })
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('password', this)">
                        <i class="fa fa-eye"></i>
                    </button>
                </div>
            </div>
            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, htmlAttributes: new { @class = "form-label text-start d-block" })
            <div class="input-group mb-3">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", id = "confirmPassword" })
                <div class="input-group-append">
                    <button class="btn btn-outline-secondary" type="button" onclick="togglePassword('confirmPassword', this)">
                        <i class="fa fa-eye"></i>
                    </button>
                </div>
            </div>
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
        <button type="submit" class="btn btn-danger w-100 mt-2">Đăng ký</button>
    }
    <div class="text-center mt-3">
        <p>Bạn đã có tài khoản? <a href="@Url.Action("Login", "Account")" class="text-danger">Đăng nhập</a></p>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        function togglePassword(fieldId, iconElement) {
            const input = document.getElementById(fieldId);
            const icon = iconElement.querySelector("i");

            if (input.type === "password") {
                input.type = "text";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                input.type = "password";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        }
    </script>
}