@model SaleOnline.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row" style="min-height: 100vh;">
    <div class="col-md-6 d-none d-md-block p-0">
        <img src="~/Content/login.png" class="img-fluid" style="height: 100%; object-fit: cover;" />
    </div>
    <div class="col-md-6 d-flex align-items-center justify-content-center">
        <div style="max-width: 400px; width: 100%;">
            <h2 class="mb-3 fw-bold">Create your account</h2>
            <p class="mb-4">Enter your details below</p>

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group mb-3">
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Name" })
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>

                <!-- Password with eye -->
                <div class="form-group mb-3">
                    <div class="input-group">
                        @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password", id = "password" })
                        <div class="input-group-append">
                            <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('password', 'icon1')" tabindex="-1">
                                <i class="fa fa-eye" id="icon1"></i>
                            </button>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>

                <!-- Confirm Password with eye -->
                <div class="form-group mb-3">
                    <div class="input-group">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password", id = "confirmPassword" })
                        <div class="input-group-append">
                            <button type="button" class="btn btn-outline-secondary" onclick="togglePassword('confirmPassword', 'icon2')" tabindex="-1">
                                <i class="fa fa-eye" id="icon2"></i>
                            </button>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                <div class="form-group mb-3">
                    @Html.TextBoxFor(m => m.DateOfBirth, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })
                </div>

                <button type="submit" class="btn btn-danger w-100">Create Account</button>
            }

            <p class="mt-3">Already have an account? <a href="@Url.Action("Login", "Account")">Login</a></p>
        </div>
    </div>
</div>

@section scripts {
    <script>
        function togglePassword(inputId, iconId) {
            const input = document.getElementById(inputId);
            const icon = document.getElementById(iconId);

            if (input.type === "password") {
                input.type = "text";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                input.type = "password";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        }
    </script>
}
