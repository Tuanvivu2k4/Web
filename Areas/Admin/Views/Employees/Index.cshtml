@model PagedList.IPagedList<SaleOnline.Models.Admin>
@using PagedList.Mvc
@using SaleOnline.Models

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@{
    ViewBag.Title = "Quản lý nhân viên";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<form method="get" class="d-flex justify-content-center mb-3">
    <input type="text" name="search" class="form-control me-2" placeholder="Search by name" id="searchKeyword"
           value="@ViewBag.CurrentSearch" style="max-width: 250px;" />

    <select name="role" class="form-select me-2" style="max-width: 200px;">
        <option value="All" @(ViewBag.CurrentRole == "All" || ViewBag.CurrentRole == null ? "selected" : "")>All Roles</option>
        <option value="Admin" @(ViewBag.CurrentRole == "Admin" ? "selected" : "")>Admin</option>
        <option value="Employee" @(ViewBag.CurrentRole == "Employee" ? "selected" : "")>Employee</option>
    </select>

    <button type="submit" class="btn btn-primary" id="btnSearch">Filter</button>
</form>
<div class="d-flex justify-content-between mb-3">
    <div class="dropdown">
        <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
            <i class="fa fa-download"></i> Export
        </button>
        <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="@Url.Action("Export", new { format = "xlsx" })">Export to Excel (.xlsx)</a></li>
            <li><a class="dropdown-item" href="@Url.Action("Export", new { format = "csv" })">Export to CSV (.csv)</a></li>
            <li><a class="dropdown-item" href="@Url.Action("Export", new { format = "txt" })">Export to Text (.txt)</a></li>
        </ul>
    </div>
    <div class="d-flex justify-content-end mb-3">
        <button class="btn btn-danger me-2" id="btnDeleteSelected">
            <i class="fa fa-trash"></i> Xoá
        </button>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addEmployeeModal" id="btnShowAddModal">
            <i class="fa fa-plus"></i> Thêm
        </button>
    </div>
</div>
<table class="table table-hover" id="">
    <thead>
        <tr>
            <th><input type="checkbox" id="checkAll" /></th>
            <th>ID</th>
            <th colspan="2">Name</th>
            <th>Role</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="employeeTableContainer">
        @Html.Partial("_EmployeeTablePartial", Model)
    </tbody>
</table>
<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new
    {
        page,
        search = ViewBag.CurrentSearch,
        role = ViewBag.CurrentRole
    }), new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        MaximumPageNumbersToDisplay = 5,
        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
        UlElementClasses = new[] { "pagination", "justify-content-center" }
    })
</div>

@Html.Partial("_AddEmployeePartial", new CreateAdminViewModel())

<div class="modal fade" id="editEmployeeModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chỉnh sửa nhân viên</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="editEmployeeModalBody"></div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $(document).on("submit", "#createEmployeeForm", function (e) {
                e.preventDefault();

                const form = this;
                const formData = new FormData(form);

                $.ajax({
                    url: form.action,
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function () {
                        $("#addEmployeeModal").modal("hide");
                        $.get('@Url.Action("GetEmployeeTable", "Employees")', function (html) {
                            $('#employeeTableContainer').html(html);
                        });
                        alert("Đã thêm thành công.");
                    },
                    error: function (xhr) {
                        $("#addEmployeeModalBody").html(xhr.responseText);
                    }
                });
            });
            // Khi tích checkbox dòng
            $(document).on('change', '.checkItem', function () {
                const allChecked = $('.checkItem').length === $('.checkItem:checked').length;
                $('#checkAll').prop('checked', allChecked);
            });

            // Khi tích/bỏ checkbox "Chọn tất cả"
            $(document).on('change', '#checkAll', function () {
                $('.checkItem').prop('checked', $(this).is(':checked'));
            });
            $(document).on('click', '#btnDeleteSelected', function () {
                let ids = [];

                $('.checkItem:checked').each(function () {
                    let id = $(this).data('id');
                    if (id) {
                        ids.push(id);
                    }
                });

                if (ids.length === 0) {
                    alert("Bạn chưa chọn nhân viên nào để xoá.");
                    return;
                }

                if (!confirm("Bạn có chắc muốn xoá các nhân viên đã chọn?")) return;

                $.ajax({
                    url: '@Url.Action("DeleteSelected", "Employees", new { area = "Admin" })',
                    type: 'POST',
                    traditional: true, // rất quan trọng với List<long>
                    data: { ids: ids },
                    success: function (res) {
                        if (res.success) {
                            $.get('@Url.Action("GetEmployeeTable", "Employees", new { area = "Admin" })', function (html) {
                                $('#employeeTableContainer').html(html);
                                $('#checkAll').prop('checked', false); // reset chọn tất cả
                                alert("Đã xoá thành công.");
                            });
                        }
                    },
                    error: function (xhr) {
                        try {
                            const res = JSON.parse(xhr.responseText);
                            alert(res.message); // hoặc toastr.error(res.message)
                        } catch {
                            alert("Đã xảy ra lỗi.");
                        }
                    }
                });
            });
            $(document).on('click', '.delete-employee', function () {
                const id = $(this).data('id');

                if (!confirm("Bạn có chắc muốn xoá nhân viên này không?")) return;

                $.ajax({
                    url: '@Url.Action("Delete", "Employees", new { area = "Admin" })',
                    type: 'POST',
                    data: { id: id },
                    success: function (res) {
                        if (res.success) {
                            $.get('@Url.Action("GetEmployeeTable", "Employees", new { area = "Admin" })', function (html) {
                                $('#employeeTableContainer').html(html);
                                $('#checkAll').prop('checked', false);
                                alert("Đã xoá thành công.");
                            });
                        }
                    },
                    error: function (xhr) {
                        try {
                            const res = JSON.parse(xhr.responseText);
                            alert(res.message); // hoặc toastr.error(res.message)
                        } catch {
                            alert("Đã xảy ra lỗi.");
                        }
                    }
                });
            });
            $(document).on('click', '.btn-reset-password', function () {
                const id = $(this).data('id');

                if (!confirm("Bạn có chắc muốn cấp lại mật khẩu cho nhân viên này?\n(Mật khẩu mới sẽ là 123456)")) return;

                $.ajax({
                    url: '@Url.Action("ResetPassword", "Employees", new { area = "Admin" })',
                    type: 'POST',
                    data: { id: id },
                    success: function (res) {
                        if (res.success) {
                            alert("Đã cấp lại mật khẩu thành công (123456).");
                        }
                    },
                    error: function () {
                        alert("Cấp lại mật khẩu thất bại.");
                    }
                });
            });
            $(document).on('click', '.btn-edit-employee', function () {
                const id = $(this).data('id');
                $.get('@Url.Action("EditPartial", "Employees")', { id: id }, function (html) {
                    $('#editEmployeeModalBody').html(html);
                    $('#editEmployeeModal').modal('show');
                });
            });

            $(document).on('submit', '#editEmployeeForm', function (e) {
                e.preventDefault();

                const form = $(this);
                const formData = form.serialize();

                $.ajax({
                    url: form.attr('action'),
                    type: 'POST',
                    data: formData,
                    success: function () {
                        $('#editEmployeeModal').modal('hide');
                        $.get('@Url.Action("GetEmployeeTable", "Employees")', function (html) {
                            $('#employeeTableContainer').html(html);
                        });
                        alert("Cập nhật thành công.");
                    },
                    error: function (xhr) {
                        $('#editEmployeeModalBody').html(xhr.responseText);
                    }
                });
            });
        });
    </script>
}