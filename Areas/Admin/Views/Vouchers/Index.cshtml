@model PagedList.IPagedList<SaleOnline.Models.Voucher>
@using PagedList.Mvc

@{
    ViewBag.Title = "Quản lý voucher";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<!-- Tìm kiếm -->
<div class="row mb-3">
    <div class="col-md-10 mx-auto d-flex justify-content-center gap-2">
        <input type="text" class="form-control" id="searchCode" placeholder="Tìm theo mã voucher" value="@ViewBag.CurrentSearchCode" style="max-width: 200px;" />
        <select class="form-control" id="searchStatus" style="max-width: 200px;">
            <option value="">-- Trạng thái --</option>
            <option value="Active" @(ViewBag.CurrentStatus == "Active" ? "selected" : "")>Active</option>
            <option value="Expired" @(ViewBag.CurrentStatus == "Expired" ? "selected" : "")>Expired</option>
        </select>
        <button class="btn btn-primary" id="btnSearch"><i class="fa fa-search"></i> Tìm</button>
    </div>
</div>

<!-- Hành động -->
<div class="d-flex justify-content-between mb-3 align-items-center">
    <!-- Bên trái: Export + Import -->
    <div class="d-flex gap-2 align-items-center">
        <div class="dropdown">
            <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                <i class="fa fa-download"></i> Export
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="@Url.Action("Export", "Vouchers", new { area = "Admin", format = "xlsx" })">Export to Excel (.xlsx)</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Export", "Vouchers", new { area = "Admin", format = "csv" })">Export to CSV (.csv)</a></li>
                <li><a class="dropdown-item" href="@Url.Action("Export", "Vouchers", new { area = "Admin", format = "txt" })">Export to Text (.txt)</a></li>
            </ul>
        </div>

        <form action="@Url.Action("Import", "Vouchers", new { area = "Admin" })" method="post" enctype="multipart/form-data" class="d-inline-block">
            <div class="input-group">
                <input type="file" name="importFile" class="form-control" accept=".xlsx,.csv,.txt" required />
                <button type="submit" class="btn btn-success">
                    <i class="fa fa-upload"></i> Import
                </button>
            </div>
        </form>
    </div>

    <!-- Bên phải: Xoá + Thêm -->
    <div class="d-flex gap-2">
        <button class="btn btn-danger" id="btnDeleteSelected"><i class="fa fa-trash"></i> Xoá</button>
        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#addVoucherModal">
            <i class="fa fa-plus"></i> Thêm voucher
        </button>
    </div>
</div>

<!-- Bảng dữ liệu -->
<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th><input type="checkbox" id="checkAll" /></th>
            <th>Mã</th>
            <th>Giảm (%)</th>
            <th>Số lượng</th>
            <th>Ngày bắt đầu</th>
            <th>Ngày kết thúc</th>
            <th>Trạng thái</th>
            <th>Thao tác</th> <!-- Mới thêm -->
        </tr>
    </thead>
    <tbody id="voucherTableContainer">
        @Html.Partial("_VoucherTablePartial", Model)
    </tbody>
</table>

<!-- Phân trang -->
<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new
    {
        page,
        searchCode = ViewBag.CurrentSearchCode,
        status = ViewBag.CurrentStatus
    }), new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        MaximumPageNumbersToDisplay = 5,
        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
        UlElementClasses = new[] { "pagination", "justify-content-center" }
    })
</div>

@Html.Partial("_AddVoucherPartial", new SaleOnline.Models.CreateVoucherViewModel())

<div class="modal fade" id="editVoucherModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Sửa voucher</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="editVoucherModalBody">
                <!-- Partial sẽ load vào đây -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#btnSearch').click(function () {
                const code = $('#searchCode').val();
                const status = $('#searchStatus').val();
                const query = `?searchCode=${code}&status=${status}`;
                window.location.href = '@Url.Action("Index", "Vouchers", new { area = "Admin" })' + query;
            });
            // Khi tích checkbox dòng
            $(document).on('change', '.checkItem', function () {
                const allChecked = $('.checkItem').length === $('.checkItem:checked').length;
                $('#checkAll').prop('checked', allChecked);
            });

            // Khi tích/bỏ checkbox "Chọn tất cả"
            $(document).on('change', '#checkAll', function () {
                $('.checkItem').prop('checked', $(this).is(':checked'));
            });
            $(document).on("submit", "#createVoucherForm", function (e) {
                e.preventDefault();

                const form = this;
                const formData = new FormData(form);

                $.ajax({
                    url: form.action,
                    type: "POST",
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function () {
                        $("#addVoucherModal").modal("hide");
                        $.get('@Url.Action("GetVoucherTable", "Vouchers")', function (html) {
                            $('#voucherTableContainer').html(html);
                        });
                        alert("Thêm voucher thành công.");
                    },
                    error: function (xhr) {
                        $("#addVoucherModalBody").html(xhr.responseText);
                    }
                });
            });
            $(document).on("click", ".btn-edit-voucher", function () {
                const id = $(this).data("id");
                $.get('@Url.Action("EditPartial", "Vouchers")', { id: id }, function (html) {
                    $("#editVoucherModalBody").html(html);
                    $("#editVoucherModal").modal("show");
                });
            });

            $(document).on("submit", "#editVoucherForm", function (e) {
                e.preventDefault();

                const form = $(this);
                const formData = form.serialize();

                $.ajax({
                    url: form.attr("action"),
                    type: "POST",
                    data: formData,
                    success: function () {
                        $("#editVoucherModal").modal("hide");
                        $.get('@Url.Action("GetVoucherTable", "Vouchers")', function (html) {
                            $("#voucherTableContainer").html(html);
                        });
                        alert("Cập nhật thành công.");
                    },
                    error: function (xhr) {
                        $("#editVoucherModalBody").html(xhr.responseText);
                    }
                });
            });
            $(document).on('click', '#btnDeleteSelected', function () {
                let ids = [];

                $('.checkItem:checked').each(function () {
                    const id = $(this).data('id');
                    if (id) ids.push(id);
                });

                if (ids.length === 0) {
                    alert("Vui lòng chọn ít nhất một voucher để xoá.");
                    return;
                }

                if (!confirm("Bạn có chắc muốn xoá các voucher đã chọn?")) return;

                $.ajax({
                    url: '@Url.Action("DeleteSelected", "Vouchers", new { area = "Admin" })',
                    type: 'POST',
                    traditional: true,
                    data: { ids: ids },
                    success: function (res) {
                        if (res.success) {
                            $.get('@Url.Action("GetVoucherTable", "Vouchers", new { area = "Admin" })', function (html) {
                                $('#voucherTableContainer').html(html);
                                $('#checkAll').prop('checked', false);
                                alert("Đã xoá thành công.");
                            });
                        }
                    },
                    error: function (xhr) {
                        try {
                            const res = JSON.parse(xhr.responseText);
                            alert(res.message);
                        } catch {
                            alert("Đã xảy ra lỗi.");
                        }
                    }
                });
            });
            $(document).on('click', '.btn-delete-voucher', function () {
                const id = $(this).data('id');

                if (!confirm("Bạn có chắc muốn xoá voucher này không?")) return;

                $.ajax({
                    url: '@Url.Action("Delete", "Vouchers", new { area = "Admin" })',
                    type: 'POST',
                    data: { id: id },
                    success: function (res) {
                        if (res.success) {
                            $.get('@Url.Action("GetVoucherTable", "Vouchers", new { area = "Admin" })', function (html) {
                                $('#voucherTableContainer').html(html);
                                $('#checkAll').prop('checked', false);
                                alert("Đã xoá thành công.");
                            });
                        }
                    },
                    error: function (xhr) {
                        try {
                            const res = JSON.parse(xhr.responseText);
                            alert(res.message);
                        } catch {
                            alert("Đã xảy ra lỗi.");
                        }
                    }
                });
            });
        });
    </script>
}
